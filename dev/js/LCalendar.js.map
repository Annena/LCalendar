{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/js/LCalendar.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI,EAAE;AAC5C,oEAAoE,IAAI;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE,IAAI,IAAI,IAAI,IAAI;AACpC,2DAA2D,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE,IAAI,IAAI;AAC5B,sDAAsD,IAAI;AAC1D;AACA;AACA;AACA;AACA,kBAAkB,EAAE,IAAI,EAAE;AAC1B,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE,cAAc,QAAQ,OAAO,EAAE,cAAc,QAAQ,OAAO;AACrE;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,KAAK,EAAE,KAAK;AAC1D,gDAAgD,KAAK,EAAE,KAAK,EAAE,KAAK;AACnE;AACA;AACA,qBAAqB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM;AACvD;AACA,gDAAgD,KAAK,EAAE,MAAM;AAC7D,OAAO;AACP;AACA;AACA;AACA;AACe,6EAAc,EAAC","file":"LCalendar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class MobileCalendar {\r\n  constructor() {\r\n    this.gearDate;\r\n    this.minY = 1900;\r\n    this.minM = 1;\r\n    this.minD = 1;\r\n    this.maxY = 2099;\r\n    this.maxM = 12;\r\n    this.maxD = 31;\r\n  }\r\n  init(params) {\r\n    this.type = params.type;\r\n    this.trigger = document.querySelector(params.trigger);\r\n    if (this.trigger.getAttribute(\"data-lcalendar\") != null) {\r\n      let arr = this.trigger.getAttribute(\"data-lcalendar\").split(\",\");\r\n      let minArr = arr[0].split(\"-\");\r\n      this.minY = ~~minArr[0];\r\n      this.minM = ~~minArr[1];\r\n      this.minD = ~~minArr[2];\r\n      let maxArr = arr[1].split(\"-\");\r\n      this.maxY = ~~maxArr[0];\r\n      this.maxM = ~~maxArr[1];\r\n      this.maxD = ~~maxArr[2];\r\n    }\r\n    if (params.minDate) {\r\n      let minArr = params.minDate.split(\"-\");\r\n      this.minY = ~~minArr[0];\r\n      this.minM = ~~minArr[1];\r\n      this.minD = ~~minArr[2];\r\n    }\r\n    if (params.maxDate) {\r\n      let maxArr = params.maxDate.split(\"-\");\r\n      this.maxY = ~~maxArr[0];\r\n      this.maxM = ~~maxArr[1];\r\n      this.maxD = ~~maxArr[2];\r\n    }\r\n    this.bindEvent(this.type);\r\n  }\r\n  //求月份最大天数\r\n  calcDays(year, month) {\r\n    if (month == 1) {\r\n      year += this.minY;\r\n      if (\r\n        (year % 4 == 0 && year % 100 != 0) ||\r\n        (year % 400 == 0 && year % 4000 != 0)\r\n      ) {\r\n        return 29;\r\n      } else {\r\n        return 28;\r\n      }\r\n    } else {\r\n      if (month == 3 || month == 5 || month == 8 || month == 10) {\r\n        return 30;\r\n      } else {\r\n        return 31;\r\n      }\r\n    }\r\n  }\r\n  //初始化年月日时分插件默认值\r\n  defaultValueInit() {\r\n    let date = new Date();\r\n    let dateArr = {\r\n      yy: -1,\r\n      mm: date.getMonth(),\r\n      dd: date.getDate() - 1,\r\n      hh: date.getHours(),\r\n      mi: date.getMinutes(),\r\n    };\r\n    if (/^\\d{4}-\\d{1,2}-\\d{1,2}\\s\\d{2}:\\d{2}$/.test(this.trigger.value)) {\r\n      let [yy,mm,dd,hh,mi] = this.trigger.value.match(/(^|-|\\s|:)\\d{1,4}/g);\r\n      dateArr.yy = yy - this.minY;\r\n      dateArr.mm = mm.replace(/-/g, \"\") - 1;\r\n      dateArr.dd = dd.replace(/-/g, \"\") - 1;\r\n      dateArr.hh = ~~hh.replace(/\\s0?/g, \"\");\r\n      dateArr.mi = ~~mi.replace(/:0?/g, \"\");\r\n    }\r\n    //初始化年月日插件默认值\r\n    else if (/^\\d{4}-\\d{1,2}-\\d{1,2}$/.test(this.trigger.value)) {\r\n      const [yy,mm,dd] = this.trigger.value.match(/(^|-)\\d{1,4}/g);\r\n      dateArr.yy = yy - this.minY;\r\n      dateArr.mm = mm.replace(/-/g, \"\") - 1;\r\n      dateArr.dd = dd.replace(/-/g, \"\") - 1;\r\n    }\r\n    //初始化年月插件默认值\r\n    else if (/^\\d{4}-\\d{1,2}$/.test(this.trigger.value)) {\r\n      let [yy,mm] = this.trigger.value.match(/(^|-)\\d{1,4}/g);\r\n      dateArr.yy = yy - this.minY;\r\n      dateArr.mm = mm.replace(/-/g, \"\") - 1;\r\n    }\r\n    //初始化时分插件默认值\r\n    else if (/^\\d{2}:\\d{2}$/.test(this.trigger.value)) {\r\n      let [hh,mi] = this.trigger.value.match(/(^|:)\\d{2}/g);\r\n      dateArr.hh = ~~hh.replace(/^0?/g, \"\");\r\n      dateArr.mi = ~~mi.replace(/:0?/g, \"\");\r\n    }\r\n    if (this.gearDate.querySelector(\".date_yy\")) {\r\n      if(dateArr.yy<0){\r\n        const nowY=date.getFullYear();\r\n        const minY =nowY - this.minY;\r\n        const maxY =nowY - this.maxY;\r\n        if(minY<=0){\r\n          dateArr.yy=0;\r\n          const minM=this.minM-1;\r\n          const minD=this.minD-1;\r\n          if(dateArr.mm<=minM){\r\n            dateArr.mm=minM;\r\n            dateArr.dd=minD;\r\n          }\r\n        }else if(maxY>=0){\r\n          dateArr.yy=minY;\r\n          const maxM=this.maxM-1;\r\n          const maxD=this.maxD-1;\r\n          if(dateArr.mm>=maxM){\r\n            dateArr.mm=maxM;\r\n            dateArr.dd=maxD;\r\n          }\r\n        }else{\r\n          dateArr.yy=minY;\r\n        }\r\n      }\r\n      this.gearDate.querySelector(\".date_yy\").setAttribute(\"val\", dateArr.yy);\r\n      this.gearDate.querySelector(\".date_mm\").setAttribute(\"val\", dateArr.mm);\r\n      if (this.gearDate.querySelector(\".date_dd\")) {\r\n        this.gearDate.querySelector(\".date_dd\").setAttribute(\"val\", dateArr.dd);\r\n      }\r\n      this.setDateGearTooth();\r\n    }\r\n    if (\r\n      this.gearDate.querySelector(\".time_hh\") &&\r\n      this.gearDate.querySelector(\".time_mm\")\r\n    ) {\r\n      this.gearDate.querySelector(\".time_hh\").setAttribute(\"val\", dateArr.hh);\r\n      this.gearDate.querySelector(\".time_mm\").setAttribute(\"val\", dateArr.mi);\r\n      this.setTimeGearTooth();\r\n    }\r\n  }\r\n  //重置时间节点个数\r\n  setTimeGearTooth() {\r\n    let time_hh = this.gearDate.querySelector(\".time_hh\");\r\n    if (time_hh && time_hh.getAttribute(\"val\")) {\r\n      let i = \"\";\r\n      let hhVal = parseInt(time_hh.getAttribute(\"val\"));\r\n      for (let g = 0; g <= 23; g++) {\r\n        i += \"<div class='tooth'>\" + g + \"</div>\";\r\n      }\r\n      time_hh.innerHTML = i;\r\n      time_hh.style[\"-webkit-transform\"] =\r\n        \"translate3d(0,\" + (8 - hhVal * 2) + \"em,0)\";\r\n      time_hh.setAttribute(\"top\", 8 - hhVal * 2 + \"em\");\r\n    } else {\r\n      return;\r\n    }\r\n    let time_mm = this.gearDate.querySelector(\".time_mm\");\r\n    if (time_mm && time_mm.getAttribute(\"val\")) {\r\n      let i = \"\";\r\n      let mmVal = parseInt(time_mm.getAttribute(\"val\"));\r\n      for (let g = 0; g <= 59; g++) {\r\n        i += \"<div class='tooth'>\" + g + \"</div>\";\r\n      }\r\n      time_mm.innerHTML = i;\r\n      time_mm.style[\"-webkit-transform\"] =\r\n        \"translate3d(0,\" + (8 - mmVal * 2) + \"em,0)\";\r\n      time_mm.setAttribute(\"top\", 8 - mmVal * 2 + \"em\");\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  //重置节点个数\r\n  setDateGearTooth() {\r\n    let newY = new Date().getFullYear();\r\n    let passY = this.maxY - this.minY + 1;\r\n    let date_yy = this.gearDate.querySelector(\".date_yy\");\r\n    let itemStr = \"\";\r\n    if (!date_yy || !date_yy.getAttribute(\"val\")) {\r\n      return;\r\n    }\r\n    //得到年份的值\r\n    let yyVal = parseInt(date_yy.getAttribute(\"val\"));\r\n    //p 当前节点前后需要展示的节点个数\r\n    for (let p = 0; p <= passY - 1; p++) {\r\n      itemStr += \"<div class='tooth'>\" + (this.minY + p) + \"</div>\";\r\n    }\r\n    date_yy.innerHTML = itemStr;\r\n    let top = Math.floor(parseFloat(date_yy.getAttribute(\"top\")));\r\n    if (!isNaN(top)) {\r\n      top % 2 == 0 ? (top = top) : (top = top + 1);\r\n      top > 8 && (top = 8);\r\n      let minTop = 8 - (passY - 1) * 2;\r\n      top < minTop && (top = minTop);\r\n      date_yy.style[\"-webkit-transform\"] = \"translate3d(0,\" + top + \"em,0)\";\r\n      date_yy.setAttribute(\"top\", top + \"em\");\r\n      yyVal = Math.abs(top - 8) / 2;\r\n      date_yy.setAttribute(\"val\", yyVal);\r\n    } else {\r\n      let minTop = 8 - (passY - 1) * 2;\r\n      let gearVal = Math.abs(minTop - 8) / 2;\r\n      if (this.maxY < newY) {\r\n        yyVal > gearVal && (yyVal = gearVal);\r\n      } else if (this.minY > newY) {\r\n        if(yyVal > gearVal){\r\n          yyVal = gearVal\r\n        }\r\n      }\r\n      date_yy.style[\"-webkit-transform\"] =\r\n        \"translate3d(0,\" + (8 - yyVal * 2) + \"em,0)\";\r\n      date_yy.setAttribute(\"top\", 8 - yyVal * 2 + \"em\");\r\n    }\r\n    let date_mm = this.gearDate.querySelector(\".date_mm\");\r\n    if (!date_mm || !date_mm.getAttribute(\"val\")) {\r\n      return;\r\n    }\r\n    itemStr = \"\";\r\n    //得到月份的值\r\n    let mmVal = parseInt(date_mm.getAttribute(\"val\"));\r\n    let maxM = 11;\r\n    let minM = 0;\r\n    //当年份到达最大值\r\n    if (yyVal == passY - 1) {\r\n      maxM = this.maxM - 1;\r\n    }\r\n    //当年份到达最小值\r\n    if (yyVal == 0) {\r\n      minM = this.minM - 1;\r\n    }\r\n    //p 当前节点前后需要展示的节点个数\r\n    for (let p = 0; p < maxM - minM + 1; p++) {\r\n      itemStr += \"<div class='tooth'>\" + (minM + p + 1) + \"</div>\";\r\n    }\r\n    date_mm.innerHTML = itemStr;\r\n    if (mmVal > maxM) {\r\n      mmVal = maxM;\r\n    } else if (mmVal <= minM) {\r\n      mmVal = minM;\r\n    }\r\n    date_mm.setAttribute(\"val\", mmVal);\r\n    date_mm.style[\"-webkit-transform\"] =\r\n      \"translate3d(0,\" + (8 - (mmVal - minM) * 2) + \"em,0)\";\r\n    date_mm.setAttribute(\"top\", 8 - (mmVal - minM) * 2 + \"em\");\r\n    let date_dd = this.gearDate.querySelector(\".date_dd\");\r\n    if (date_dd && date_dd.getAttribute(\"val\")) {\r\n      itemStr = \"\";\r\n      //得到日期的值\r\n      let ddVal = parseInt(date_dd.getAttribute(\"val\"));\r\n      //返回月份的天数\r\n      let maxMonthDays = this.calcDays(yyVal, mmVal);\r\n      //p 当前节点前后需要展示的节点个数\r\n      let maxD = maxMonthDays - 1;\r\n      let minD = 0;\r\n      //当年份月份到达最大值\r\n      if (yyVal == passY - 1 && this.maxM == mmVal + 1) {\r\n        maxD = this.maxD - 1;\r\n        if (ddVal > maxD) {\r\n          ddVal = maxD;\r\n        }\r\n      }\r\n      //当年、月到达最小值\r\n      if (yyVal == 0 && this.minM == mmVal + 1) {\r\n        minD = this.minD - 1;\r\n        if (ddVal <= minD) {\r\n          ddVal = minD;\r\n        }\r\n      }\r\n      for (let p = 0; p < maxD - minD + 1; p++) {\r\n        itemStr += \"<div class='tooth'>\" + (minD + p + 1) + \"</div>\";\r\n      }\r\n      date_dd.innerHTML = itemStr;\r\n      date_dd.setAttribute(\"val\", ddVal);\r\n      date_dd.style[\"-webkit-transform\"] =\r\n        \"translate3d(0,\" + (8 - (ddVal - minD) * 2) + \"em,0)\";\r\n      date_dd.setAttribute(\"top\", 8 - (ddVal - minD) * 2 + \"em\");\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  //控制插件滚动后停留的值\r\n  setGear() {\r\n    return (target, val) => {\r\n      if (this.gearDate !== null && !isNaN(val)) {\r\n        val = Math.round(val);\r\n        target.setAttribute(\"val\", val);\r\n        if (/date/.test(target.dataset.datetype)) {\r\n          this.setDateGearTooth();\r\n        } else {\r\n          this.setTimeGearTooth();\r\n        }\r\n      }\r\n    };\r\n  }\r\n  //缓动效果\r\n  rollGear(target) {\r\n    let setgear = this.setGear();\r\n    let d = 0,\r\n      stopGear = false,\r\n      passY = this.maxY - this.minY + 1;\r\n    const setDuration = () => {\r\n      target.style.webkitTransitionDuration = target.style.transitionDuration =\r\n        \"200ms\";\r\n      stopGear = true;\r\n    };\r\n    cancelAnimationFrame(target[\"int_\" + target.id]);\r\n    const animate = () => {\r\n      if (!this.gearDate) {\r\n        cancelAnimationFrame(target[\"int_\" + target.id]);\r\n        return;\r\n      }\r\n      let pos = target[\"pos_\" + target.id];\r\n      let speed = target[\"spd_\" + target.id] * Math.exp(-0.03 * d);\r\n      pos += speed;\r\n      if (Math.abs(speed) > 0.1) {\r\n      } else {\r\n        let b = Math.round(pos / 2) * 2;\r\n        pos = b;\r\n        setDuration();\r\n      }\r\n      if (pos > 8) {\r\n        pos = 8;\r\n        setDuration();\r\n      }\r\n      let minTop, yyVal;\r\n      let date_yy = this.gearDate.querySelector(\".date_yy\");\r\n      switch (target.dataset.datetype) {\r\n        case \"date_yy\":\r\n          minTop = 8 - (passY - 1) * 2;\r\n          if (pos < minTop) {\r\n            pos = minTop;\r\n            setDuration();\r\n          }\r\n          if (stopGear) {\r\n            let gearVal = Math.abs(pos - 8) / 2;\r\n            setgear(target, gearVal);\r\n            cancelAnimationFrame(target[\"int_\" + target.id]);\r\n          }\r\n          break;\r\n        case \"date_mm\":\r\n          //得到年份的值\r\n          yyVal = parseInt(date_yy.getAttribute(\"val\"));\r\n          let maxM = 11;\r\n          let minM = 0;\r\n          //当年份到达最大值\r\n          if (yyVal == passY - 1) {\r\n            maxM = this.maxM - 1;\r\n          }\r\n          //当年份到达最小值\r\n          if (yyVal == 0) {\r\n            minM = this.minM - 1;\r\n          }\r\n          minTop = 8 - (maxM - minM) * 2;\r\n          if (pos < minTop) {\r\n            pos = minTop;\r\n            setDuration();\r\n          }\r\n          if (stopGear) {\r\n            let gearVal = Math.abs(pos - 8) / 2 + minM;\r\n            setgear(target, gearVal);\r\n            cancelAnimationFrame(target[\"int_\" + target.id]);\r\n          }\r\n          break;\r\n        case \"date_dd\":\r\n          let date_mm = this.gearDate.querySelector(\".date_mm\");\r\n          //得到年份的值\r\n          yyVal = parseInt(date_yy.getAttribute(\"val\"));\r\n          //得到月份的值\r\n          let mmVal = parseInt(date_mm.getAttribute(\"val\"));\r\n          //返回月份的天数\r\n          let maxMonthDays = this.calcDays(yyVal, mmVal);\r\n          let maxD = maxMonthDays - 1;\r\n          let minD = 0;\r\n          //当年份月份到达最大值\r\n          if (yyVal == passY - 1 && this.maxM == mmVal + 1) {\r\n            maxD = this.maxD - 1;\r\n          }\r\n          //当年、月到达最小值\r\n          if (yyVal == 0 && this.minM == mmVal + 1) {\r\n            minD = this.minD - 1;\r\n          }\r\n          minTop = 8 - (maxD - minD) * 2;\r\n          if (pos < minTop) {\r\n            pos = minTop;\r\n            setDuration();\r\n          }\r\n          if (stopGear) {\r\n            let gearVal = Math.abs(pos - 8) / 2 + minD;\r\n            setgear(target, gearVal);\r\n            cancelAnimationFrame(target[\"int_\" + target.id]);\r\n          }\r\n          break;\r\n        case \"time_hh\":\r\n          if (pos < -38) {\r\n            pos = -38;\r\n            setDuration();\r\n          }\r\n          if (stopGear) {\r\n            let gearVal = Math.abs(pos - 8) / 2;\r\n            setgear(target, gearVal);\r\n            cancelAnimationFrame(target[\"int_\" + target.id]);\r\n          }\r\n          break;\r\n        case \"time_mm\":\r\n          if (pos < -110) {\r\n            pos = -110;\r\n            setDuration();\r\n          }\r\n          if (stopGear) {\r\n            let gearVal = Math.abs(pos - 8) / 2;\r\n            setgear(target, gearVal);\r\n            cancelAnimationFrame(target[\"int_\" + target.id]);\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n      target[\"pos_\" + target.id] = pos;\r\n      target.style[\"-webkit-transform\"] = \"translate3d(0,\" + pos + \"em,0)\";\r\n      target.setAttribute(\"top\", pos + \"em\");\r\n      d++;\r\n      if (!stopGear) {\r\n        requestAnimationFrame(animate);\r\n      }\r\n    };\r\n    target[\"int_\" + target.id] = requestAnimationFrame(animate);\r\n  }\r\n  //触摸开始\r\n  handleTouchStart() {\r\n    return (e) => {\r\n      e.preventDefault();\r\n      let target = e.target;\r\n      while (true) {\r\n        if (!target.classList.contains(\"gear\")) {\r\n          target = target.parentElement;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      cancelAnimationFrame(target[\"int_\" + target.id]);\r\n      target[\"old_\" + target.id] = e.targetTouches[0].screenY;\r\n      target[\"o_t_\" + target.id] = new Date().getTime();\r\n      let top = target.getAttribute(\"top\");\r\n      if (top) {\r\n        target[\"o_d_\" + target.id] = parseFloat(top.replace(/em/g, \"\"));\r\n      } else {\r\n        target[\"o_d_\" + target.id] = 0;\r\n      }\r\n      target.style.webkitTransitionDuration = target.style.transitionDuration =\r\n        \"0ms\";\r\n    };\r\n  }\r\n  //手指移动\r\n  handleTouchMove(gearTouchEnd) {\r\n    return (e) => {\r\n      e.preventDefault();\r\n      let target = e.target;\r\n      while (true) {\r\n        if (!target.classList.contains(\"gear\")) {\r\n          target = target.parentElement;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      target[\"new_\" + target.id] = e.targetTouches[0].screenY;\r\n      target[\"n_t_\" + target.id] = new Date().getTime();\r\n      let f =\r\n        ((target[\"new_\" + target.id] - target[\"old_\" + target.id]) * 30) /\r\n        window.innerHeight;\r\n      target[\"pos_\" + target.id] = target[\"o_d_\" + target.id] + f;\r\n      target.style[\"-webkit-transform\"] =\r\n        \"translate3d(0,\" + target[\"pos_\" + target.id] + \"em,0)\";\r\n      target.setAttribute(\"top\", target[\"pos_\" + target.id] + \"em\");\r\n      if (e.targetTouches[0].screenY < 1) {\r\n        gearTouchEnd(e);\r\n      }\r\n    };\r\n  }\r\n  //离开屏幕\r\n  handleTouchEnd() {\r\n    return (e) => {\r\n      e.preventDefault();\r\n      let target = e.target;\r\n      while (true) {\r\n        if (!target.classList.contains(\"gear\")) {\r\n          target = target.parentElement;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      let flag =\r\n        (target[\"new_\" + target.id] - target[\"old_\" + target.id]) /\r\n        (target[\"n_t_\" + target.id] - target[\"o_t_\" + target.id]);\r\n      if (Math.abs(flag) <= 0.2) {\r\n        target[\"spd_\" + target.id] = flag < 0 ? -0.08 : 0.08;\r\n      } else {\r\n        if (Math.abs(flag) <= 0.5) {\r\n          target[\"spd_\" + target.id] = flag < 0 ? -0.16 : 0.16;\r\n        } else {\r\n          target[\"spd_\" + target.id] = flag / 2;\r\n        }\r\n      }\r\n      if (!target[\"pos_\" + target.id]) {\r\n        target[\"pos_\" + target.id] = 0;\r\n      }\r\n      this.rollGear(target);\r\n    };\r\n  }\r\n  //销毁\r\n  destroy() {\r\n    return (e) => {\r\n      e.preventDefault();\r\n      let evt;\r\n      try {\r\n        evt = new CustomEvent(\"input\");\r\n      } catch (e) {\r\n        //兼容旧浏览器(注意：该方法已从最新的web标准中删除)\r\n        evt = document.createEvent(\"Event\");\r\n        evt.initEvent(\"input\", true, true);\r\n      }\r\n      this.trigger.dispatchEvent(evt);\r\n      document.body.removeChild(this.gearDate);\r\n      this.gearDate = null;\r\n    };\r\n  }\r\n  //确认\r\n  confirm(closeCalendar) {\r\n    return (e) => {\r\n      let passY, date_yy, date_mm, date_dd, time_hh, time_mm;\r\n      let Y = this.gearDate.querySelector(\".date_yy\");\r\n      let M = this.gearDate.querySelector(\".date_mm\");\r\n      if (Y) {\r\n        passY = this.maxY - this.minY + 1;\r\n        date_yy = parseInt(Math.round(Y.getAttribute(\"val\")));\r\n        date_mm = parseInt(Math.round(M.getAttribute(\"val\"))) + 1;\r\n        date_mm = date_mm > 9 ? date_mm : \"0\" + date_mm;\r\n      }\r\n      let D = this.gearDate.querySelector(\".date_dd\");\r\n      if (D) {\r\n        date_dd = parseInt(Math.round(D.getAttribute(\"val\"))) + 1;\r\n        date_dd = date_dd > 9 ? date_dd : \"0\" + date_dd;\r\n      }\r\n      let H = this.gearDate.querySelector(\".time_hh\");\r\n      let MI = this.gearDate.querySelector(\".time_mm\");\r\n      if (H) {\r\n        time_hh = parseInt(Math.round(H.getAttribute(\"val\")));\r\n        time_hh = time_hh > 9 ? time_hh : \"0\" + time_hh;\r\n        time_mm = parseInt(Math.round(MI.getAttribute(\"val\")));\r\n        time_mm = time_mm > 9 ? time_mm : \"0\" + time_mm;\r\n      }\r\n      this.trigger.value = `${\r\n        date_yy >= 0 ? (date_yy % passY) + this.minY : \"\"\r\n      }${date_mm ? `-${date_mm}` : \"\"}${date_dd ? `-${date_dd}` : \"\"}${\r\n        date_dd && time_hh ? \" \" : \"\"\r\n      }${\r\n        time_hh\r\n          ? `${\r\n              (time_hh.length < 2 ? \"0\" : \"\") +\r\n              time_hh +\r\n              (time_mm.length < 2 ? \":0\" : \":\") +\r\n              time_mm\r\n            }`\r\n          : \"\"\r\n      }`;\r\n      closeCalendar(e);\r\n    };\r\n  }\r\n  //呼出插件\r\n  popup(className, template) {\r\n    return () => {\r\n      this.gearDate = document.createElement(\"div\");\r\n      this.gearDate.className = className;\r\n      this.gearDate.innerHTML = template;\r\n      document.body.appendChild(this.gearDate);\r\n      this.bind();\r\n    };\r\n  }\r\n  //呼出插件后绑定事件\r\n  bind() {\r\n    this.defaultValueInit();\r\n    let closeCalendar = this.destroy();\r\n    let confirmValue = this.confirm(closeCalendar);\r\n    let gearTouchStart = this.handleTouchStart();\r\n    let gearTouchEnd = this.handleTouchEnd();\r\n    let gearTouchMove = this.handleTouchMove(gearTouchEnd);\r\n    let lcalendar_cancel = this.gearDate.querySelector(\".lcalendar_cancel\");\r\n    lcalendar_cancel.addEventListener(\"touchstart\", closeCalendar);\r\n    let lcalendar_finish = this.gearDate.querySelector(\".lcalendar_finish\");\r\n    lcalendar_finish.addEventListener(\"touchstart\", confirmValue);\r\n    let date_yy = this.gearDate.querySelector(\".date_yy\");\r\n    let date_mm = this.gearDate.querySelector(\".date_mm\");\r\n    let date_dd = this.gearDate.querySelector(\".date_dd\");\r\n    let time_hh = this.gearDate.querySelector(\".time_hh\");\r\n    let time_mm = this.gearDate.querySelector(\".time_mm\");\r\n    if (date_yy) {\r\n      date_yy.addEventListener(\"touchstart\", gearTouchStart);\r\n      date_mm.addEventListener(\"touchstart\", gearTouchStart);\r\n      date_yy.addEventListener(\"touchmove\", gearTouchMove);\r\n      date_mm.addEventListener(\"touchmove\", gearTouchMove);\r\n      date_yy.addEventListener(\"touchend\", gearTouchEnd);\r\n      date_mm.addEventListener(\"touchend\", gearTouchEnd);\r\n      if (date_dd) {\r\n        date_dd.addEventListener(\"touchstart\", gearTouchStart);\r\n        date_dd.addEventListener(\"touchmove\", gearTouchMove);\r\n        date_dd.addEventListener(\"touchend\", gearTouchEnd);\r\n      }\r\n    }\r\n    if (time_hh) {\r\n      time_hh.addEventListener(\"touchstart\", gearTouchStart);\r\n      time_mm.addEventListener(\"touchstart\", gearTouchStart);\r\n      time_hh.addEventListener(\"touchmove\", gearTouchMove);\r\n      time_mm.addEventListener(\"touchmove\", gearTouchMove);\r\n      time_hh.addEventListener(\"touchend\", gearTouchEnd);\r\n      time_mm.addEventListener(\"touchend\", gearTouchEnd);\r\n    }\r\n  }\r\n  bindEvent(type) {\r\n    function getTemp(containsStr, str) {\r\n      let tempStr = `<div class=\"date_ctrl slideInUp\">\r\n            <div class=\"date_btn_box\">\r\n            <div class=\"date_btn lcalendar_cancel\">取消</div>\r\n            <div class=\"date_btn lcalendar_finish\">确定</div>\r\n            </div>\r\n            <div class=\"date_roll_mask\">\r\n            <div class=\"${str ? str : \"date_roll\"}\">\r\n            ${containsStr}\r\n            </div>\r\n            </div>\r\n            </div>`;\r\n      return tempStr;\r\n    }\r\n    let ystr = `<div>\r\n        <div class=\"gear date_yy\" data-datetype=\"date_yy\"></div>\r\n        <div class=\"date_grid\">\r\n        <div>年</div>\r\n        </div>\r\n        </div>`;\r\n    let mstr = `<div>\r\n        <div class=\"gear date_mm\" data-datetype=\"date_mm\"></div>\r\n        <div class=\"date_grid\">\r\n        <div>月</div>\r\n        </div>\r\n        </div>`;\r\n    let dstr = `<div>\r\n        <div class=\"gear date_dd\" data-datetype=\"date_dd\"></div>\r\n        <div class=\"date_grid\">\r\n        <div>日</div>\r\n        </div>\r\n        </div>`;\r\n    let hstr = `<div>\r\n        <div class=\"gear time_hh\" data-datetype=\"time_hh\"></div>\r\n        <div class=\"date_grid\">\r\n        <div>时</div>\r\n        </div>\r\n        </div>`;\r\n    let mistr = `<div>\r\n        <div class=\"gear time_mm\" data-datetype=\"time_mm\"></div>\r\n        <div class=\"date_grid\">\r\n        <div>分</div>\r\n        </div>\r\n        </div>`;\r\n    this.trigger.addEventListener(\r\n      \"click\",\r\n      {\r\n        ym: this.popup(\"gearDate\", getTemp(`${ystr}${mstr}`, \"ym_roll\")), //呼出年月插件\r\n        date: this.popup(\"gearDate\", getTemp(`${ystr}${mstr}${dstr}`)), //呼出年月日插件\r\n        datetime: this.popup(\r\n          \"gearDatetime\",\r\n          getTemp(`${ystr}${mstr}${dstr}${hstr}${mistr}`, \"datetime_roll\")\r\n        ), //呼出日期+时间插件\r\n        time: this.popup(\"gearDate\", getTemp(`${hstr}${mistr}`, \"time_roll\")), //呼出时间插件\r\n      }[type]\r\n    );\r\n  }\r\n}\r\nwindow.LCalendar = MobileCalendar;\r\nexport default MobileCalendar;\r\n"],"sourceRoot":""}